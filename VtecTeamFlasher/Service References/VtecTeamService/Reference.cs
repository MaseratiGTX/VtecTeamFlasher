//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VtecTeamFlasher.VtecTeamService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="VtecTeamService.IVtecTeamWebService")]
    public interface IVtecTeamWebService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/Authenticate", ReplyAction="http://tempuri.org/IVtecTeamWebService/AuthenticateResponse")]
        ClientAndServerCommons.AuthInfoResult Authenticate(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/Authenticate", ReplyAction="http://tempuri.org/IVtecTeamWebService/AuthenticateResponse")]
        System.Threading.Tasks.Task<ClientAndServerCommons.AuthInfoResult> AuthenticateAsync(string login, string passwordHash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SignOut", ReplyAction="http://tempuri.org/IVtecTeamWebService/SignOutResponse")]
        void SignOut();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SignOut", ReplyAction="http://tempuri.org/IVtecTeamWebService/SignOutResponse")]
        System.Threading.Tasks.Task SignOutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetSoftvareVersion", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetSoftvareVersionResponse")]
        string GetSoftvareVersion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetSoftvareVersion", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetSoftvareVersionResponse")]
        System.Threading.Tasks.Task<string> GetSoftvareVersionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetReflashFile", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetReflashFileResponse")]
        byte[] GetReflashFile(ClientAndServerCommons.DataClasses.ReflashRequest reflashRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetReflashFile", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetReflashFileResponse")]
        System.Threading.Tasks.Task<byte[]> GetReflashFileAsync(ClientAndServerCommons.DataClasses.ReflashRequest reflashRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SendRequest", ReplyAction="http://tempuri.org/IVtecTeamWebService/SendRequestResponse")]
        bool SendRequest(ClientAndServerCommons.DataClasses.ReflashRequest relashRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SendRequest", ReplyAction="http://tempuri.org/IVtecTeamWebService/SendRequestResponse")]
        System.Threading.Tasks.Task<bool> SendRequestAsync(ClientAndServerCommons.DataClasses.ReflashRequest relashRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetReflashHistory", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetReflashHistoryResponse")]
        ClientAndServerCommons.DataClasses.ReflashHistory[] GetReflashHistory(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetReflashHistory", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetReflashHistoryResponse")]
        System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.ReflashHistory[]> GetReflashHistoryAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetAdminReflashHistory", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetAdminReflashHistoryResponse")]
        ClientAndServerCommons.DataClasses.ReflashHistory[] GetAdminReflashHistory(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetAdminReflashHistory", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetAdminReflashHistoryResponse")]
        System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.ReflashHistory[]> GetAdminReflashHistoryAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/UpdateReflashHistory", ReplyAction="http://tempuri.org/IVtecTeamWebService/UpdateReflashHistoryResponse")]
        bool UpdateReflashHistory(ClientAndServerCommons.DataClasses.ReflashHistory history);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/UpdateReflashHistory", ReplyAction="http://tempuri.org/IVtecTeamWebService/UpdateReflashHistoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateReflashHistoryAsync(ClientAndServerCommons.DataClasses.ReflashHistory history);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetReflashRequests", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetReflashRequestsResponse")]
        ClientAndServerCommons.DataClasses.ReflashRequest[] GetReflashRequests(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetReflashRequests", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetReflashRequestsResponse")]
        System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.ReflashRequest[]> GetReflashRequestsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/UpdateUserPersonalData", ReplyAction="http://tempuri.org/IVtecTeamWebService/UpdateUserPersonalDataResponse")]
        bool UpdateUserPersonalData(ClientAndServerCommons.DataClasses.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/UpdateUserPersonalData", ReplyAction="http://tempuri.org/IVtecTeamWebService/UpdateUserPersonalDataResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserPersonalDataAsync(ClientAndServerCommons.DataClasses.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SendReview", ReplyAction="http://tempuri.org/IVtecTeamWebService/SendReviewResponse")]
        bool SendReview(ClientAndServerCommons.DataClasses.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SendReview", ReplyAction="http://tempuri.org/IVtecTeamWebService/SendReviewResponse")]
        System.Threading.Tasks.Task<bool> SendReviewAsync(ClientAndServerCommons.DataClasses.Review review);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SendComment", ReplyAction="http://tempuri.org/IVtecTeamWebService/SendCommentResponse")]
        ClientAndServerCommons.SaveEntityResult SendComment(ClientAndServerCommons.DataClasses.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/SendComment", ReplyAction="http://tempuri.org/IVtecTeamWebService/SendCommentResponse")]
        System.Threading.Tasks.Task<ClientAndServerCommons.SaveEntityResult> SendCommentAsync(ClientAndServerCommons.DataClasses.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetNews", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetNewsResponse")]
        ClientAndServerCommons.DataClasses.News[] GetNews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVtecTeamWebService/GetNews", ReplyAction="http://tempuri.org/IVtecTeamWebService/GetNewsResponse")]
        System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.News[]> GetNewsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVtecTeamWebServiceChannel : VtecTeamFlasher.VtecTeamService.IVtecTeamWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VtecTeamWebServiceClient : System.ServiceModel.ClientBase<VtecTeamFlasher.VtecTeamService.IVtecTeamWebService>, VtecTeamFlasher.VtecTeamService.IVtecTeamWebService {
        
        public VtecTeamWebServiceClient() {
        }
        
        public VtecTeamWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VtecTeamWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VtecTeamWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VtecTeamWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientAndServerCommons.AuthInfoResult Authenticate(string login, string passwordHash) {
            return base.Channel.Authenticate(login, passwordHash);
        }
        
        public System.Threading.Tasks.Task<ClientAndServerCommons.AuthInfoResult> AuthenticateAsync(string login, string passwordHash) {
            return base.Channel.AuthenticateAsync(login, passwordHash);
        }
        
        public void SignOut() {
            base.Channel.SignOut();
        }
        
        public System.Threading.Tasks.Task SignOutAsync() {
            return base.Channel.SignOutAsync();
        }
        
        public string GetSoftvareVersion() {
            return base.Channel.GetSoftvareVersion();
        }
        
        public System.Threading.Tasks.Task<string> GetSoftvareVersionAsync() {
            return base.Channel.GetSoftvareVersionAsync();
        }
        
        public byte[] GetReflashFile(ClientAndServerCommons.DataClasses.ReflashRequest reflashRequest) {
            return base.Channel.GetReflashFile(reflashRequest);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetReflashFileAsync(ClientAndServerCommons.DataClasses.ReflashRequest reflashRequest) {
            return base.Channel.GetReflashFileAsync(reflashRequest);
        }
        
        public bool SendRequest(ClientAndServerCommons.DataClasses.ReflashRequest relashRequest) {
            return base.Channel.SendRequest(relashRequest);
        }
        
        public System.Threading.Tasks.Task<bool> SendRequestAsync(ClientAndServerCommons.DataClasses.ReflashRequest relashRequest) {
            return base.Channel.SendRequestAsync(relashRequest);
        }
        
        public ClientAndServerCommons.DataClasses.ReflashHistory[] GetReflashHistory(int userId) {
            return base.Channel.GetReflashHistory(userId);
        }
        
        public System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.ReflashHistory[]> GetReflashHistoryAsync(int userId) {
            return base.Channel.GetReflashHistoryAsync(userId);
        }
        
        public ClientAndServerCommons.DataClasses.ReflashHistory[] GetAdminReflashHistory(int userId) {
            return base.Channel.GetAdminReflashHistory(userId);
        }
        
        public System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.ReflashHistory[]> GetAdminReflashHistoryAsync(int userId) {
            return base.Channel.GetAdminReflashHistoryAsync(userId);
        }
        
        public bool UpdateReflashHistory(ClientAndServerCommons.DataClasses.ReflashHistory history) {
            return base.Channel.UpdateReflashHistory(history);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateReflashHistoryAsync(ClientAndServerCommons.DataClasses.ReflashHistory history) {
            return base.Channel.UpdateReflashHistoryAsync(history);
        }
        
        public ClientAndServerCommons.DataClasses.ReflashRequest[] GetReflashRequests(int userId) {
            return base.Channel.GetReflashRequests(userId);
        }
        
        public System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.ReflashRequest[]> GetReflashRequestsAsync(int userId) {
            return base.Channel.GetReflashRequestsAsync(userId);
        }
        
        public bool UpdateUserPersonalData(ClientAndServerCommons.DataClasses.User user) {
            return base.Channel.UpdateUserPersonalData(user);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserPersonalDataAsync(ClientAndServerCommons.DataClasses.User user) {
            return base.Channel.UpdateUserPersonalDataAsync(user);
        }
        
        public bool SendReview(ClientAndServerCommons.DataClasses.Review review) {
            return base.Channel.SendReview(review);
        }
        
        public System.Threading.Tasks.Task<bool> SendReviewAsync(ClientAndServerCommons.DataClasses.Review review) {
            return base.Channel.SendReviewAsync(review);
        }
        
        public ClientAndServerCommons.SaveEntityResult SendComment(ClientAndServerCommons.DataClasses.Comment comment) {
            return base.Channel.SendComment(comment);
        }
        
        public System.Threading.Tasks.Task<ClientAndServerCommons.SaveEntityResult> SendCommentAsync(ClientAndServerCommons.DataClasses.Comment comment) {
            return base.Channel.SendCommentAsync(comment);
        }
        
        public ClientAndServerCommons.DataClasses.News[] GetNews() {
            return base.Channel.GetNews();
        }
        
        public System.Threading.Tasks.Task<ClientAndServerCommons.DataClasses.News[]> GetNewsAsync() {
            return base.Channel.GetNewsAsync();
        }
    }
}
